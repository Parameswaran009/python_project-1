pipeline {
    agent any

    environment {
        DOCKER_USERNAME = "parameswaran009"
        APP_NAME = "argocd"
        IMAGE_TAG = "${BUILD_NUMBER}"
        IMAGE_NAME = "${DOCKER_USERNAME}/${APP_NAME}"
        REGISTRY_CREDENTIALS = "dockerhub"
        SCANNER_HOME = tool "sonar-scanner"
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from SCM') {
            steps {
                checkout scm: [$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/Parameswaran009/gitops-argocd-project.git']]]
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    script {
                        sh "${SCANNER_HOME}/bin/sonar-scanner -Dsonar.projectName=argocd -Dsonar.projectKey=argocd"
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonnarqube-token'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    def app = docker.build("${DOCKER_USERNAME}/${APP_NAME}")
                    
                    docker.withRegistry('https://registry.hub.docker.com', 'docker') {
                        app.push("${IMAGE_TAG}")
                    }
                }
            }
        }

        stage('Trigger ManifestUpdate') {
            steps {
                echo "Triggering updatemanifestjob"
                build job: 'updatemanifest', parameters: [string(name: 'DOCKERTAG', value: "${BUILD_NUMBER}")]
            }
        }
    }
}

